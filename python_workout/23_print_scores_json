#!/usr/bin/env python3
# Copyright SMAJKO

#Source: https://learning.oreilly.com/library/view/python-workout/9781617295508/

'''Exercise 22
Challenge dla mnie - Jak znalezc w katalogu tylko pliki z okreslonym pattern np z danym rozszerzeniem?
In this exercise, you’re analyzing test data in a high school. There’s a scores directory on the filesystem containing a number of files in JSON format. 
Each file represents the scores for one class. Write a function, print_scores, that takes a directory name as an argument and prints a summary of 
the student scores it finds.

Your function should print the highest, lowest, and average test scores for each subject in each class. Given two files (9a.json and 9b.json) in the scores 
directory, we would see the following output:

scores/9a.json
    science: min 75, max 97, average 86.4
    literature: min 78, max 98, average 83.6
    math: min 65, max 100, average 85.0
scores/9b.json
    science: min 35, max 95, average 82.0
    literature: min 38, max 98, average 72.0
    math: min 38, max 100, average 77.0
'''

import os, glob, json

# wyrzuc do listy przez list compreh
y = [item for item in os.listdir(os.path.join(os.path.dirname(__file__), 'files')) if str.endswith(item, '.json')]
#print(y)

# wyrzuc do listy przez globa
z = glob.glob(os.path.join(os.path.dirname(__file__), 'files\*.json'))      # tylko ze on zwraca full sciezke
#print(z)

# cwiczenie wlasciwe

def print_scores(dirname):
    path_list = glob.glob(os.path.join(os.path.dirname(__file__), f'{dirname}\*.json'))     #to tak zeby funkcja dzialala globalnie dla jakiegos podkatalogu
    scores = {}                                                             # to bedzie dict of dicts
    for sciezkoplik in path_list:
        scores[sciezkoplik] = {}
        with open(sciezkoplik) as sp:
            for results in json.load(sp):                                   # zwraca liste slownikow z jsona
                #print(results)
                for subject, score in results.items():                      # iterujemy po tej liscie lapiac temat i wynik
                    scores[sciezkoplik].setdefault(subject,[])              # robimy slownik z tematem i lista ocen, dict.setdefault robi to tylko gdy klucz juz nie istnieje
                    scores[sciezkoplik][subject].append(score)              # wtedy dopisujemy wynik do tej listy
        #print(scores)

    for one_class in scores:
        print(one_class)
        for subject, subject_scores in scores[one_class].items():
            min_score = min(subject_scores)
            max_score = max(subject_scores)
            average_score = (sum(subject_scores) /
                                len(subject_scores))

            print(subject)
            print(f'\tmin {min_score}')
            print(f'\tmax {max_score}')
            print(f'\taverage {average_score}')


print_scores('files')



