#!/usr/bin/env python3
# Copyright SMAJKO

#Source: https://learning.oreilly.com/library/view/python-workout/9781617295508/

'''Exercise 22
For this exercise, create a function, passwd_to_csv, that takes two filenames as arguments: the first is a passwd-style file to read from, and the second 
is the name of a file in which to write the output.
The new fileâ€™s contents are the username (index 0) and the user ID (index 2). Note that a record may contain a comment, in which case it will not have 
anything at index 2; you should take that into consideration when writing the file. The output file should use TAB characters to separate the elements.

Thus, the input will look like this

root:*:0:0::0:0:System Administrator:/var/root:/bin/sh
daemon:*:1:1::0:0:System Services:/var/root:/usr/bin/false
# I am a comment line
_ftp:*:98:-2::0:0:FTP Daemon:/var/empty:/usr/bin/false
and the output will look like this:

root    0
daemon  1
_ftp    98
'''

import csv, os

pwd1 = os.path.join(os.path.dirname(__file__), 'files\exc21.txt')
csv1 = os.path.join(os.path.dirname(__file__), 'files\exc21_csv1.txt')

print(os.path.dirname(__file__))
print(csv1, pwd1)

def passwd_to_csv(passwd_filename, csv_filename):
    with open(passwd_filename) as passwd, open(csv_filename, 'w', newline='') as output:    # otwiera tym 2 pliki! jeden do czytania drugi do pisania (bez newline dostawial dodtakowe puste wiersze)
        infile = csv.reader(passwd, delimiter=':')                                          # wczytaj sobie plik z separatorem :
        outfile = csv.writer(output, delimiter='\t')                                        # przygotuj plik do zapisu z separatorem tab
        for record in infile:
            print(record[0])
            if not str.startswith(record[0], '#'):                                          # pomijamy zakomentowane linie
            #if len(record) > 1:                                                            # to alternatywna opcja
                outfile.writerow((record[0], record[2]))

passwd_to_csv(pwd1, csv1)