#!/usr/bin/env python3
# Copyright SMAJKO

#Source: https://intel.udemy.com/course/programowanie-w-jezyku-python/learn/lecture/15723394?start=0#overview
'''print(expr1, expr2, ..., sep=' ', end='\n', file=sys.stdout, flush=False)
sep: Jest to opcjonalny argument, który określa, jakie znaki lub napisy zostaną użyte jako separator między wyrażeniami. Domyślnie jest
to spacja.
end: Jest to opcjonalny argument, który określa, co zostanie dodane na końcu wyprowadzanych danych. Domyślnie jest to nowa linia 
("\n"), co oznacza, że każde wywołanie print() automatycznie przechodzi do nowej linii. Można to zmienić, aby zachować dane w tej samej
linii lub użyć innego znaku jako zakończenia.
file: Jest to opcjonalny argument, który pozwala na określenie, do którego strumienia wyjściowego zostaną przekierowane dane. Domyślnie
jest to sys.stdout, czyli standardowe wyjście konsoli. Można to zmienić, aby przekierować dane do innego pliku lub strumienia.'''

import platform

def main():
    print('Lamie linie\n')
    print('i jestem zlamana')
    print(""" ale mozna i tak

    sie lamac""")                           # """ robia dokladnie tak jak jest napisane
    print('\t A moze tab?')
    print("C:\path\to\something\new")       # znaki specjalne rozbijaja string
    print("C:\\path\\to\\something\\new")   # podwojny backslash czyta jako tekst a nie jako specjalne znakiu wyzej
    print(r'\n\t\s\d\f\g\h')                # z r elegancko bierze jak jest
    print(r'\/' * 80)                        #prosty sposob na powielanie stringow, mozna nap oddzielic output bez mazania wszystkich tych znakow (80 suggested)
    dluga_zmienna = 'https://intel.udemy.com/course/programowanie-w-jezyku-python/learn/lecture/15714542/cosjeszczebardziejdlugiegoblabla'
    dluga_zmienna2 = ('https://intel.udemy.com/course/programowanie-w-jez'
    'yku-python/learn/lecture/15714542/cosjeszczebardziejdlugiegoblabla')       #python zlepia stringi dlatego mozna lamac tak wiersze
    print(f'{dluga_zmienna}\n{dluga_zmienna2}')
    print(dluga_zmienna,'\n',dluga_zmienna2)        # on by default jak mu dajemy kilka argumentow to wstawia spacje miedzy nie
    # formatowanie ladne
    print(f'This platform runs {platform.system()} system with release {platform.release()} on processor {platform.processor()}')
    # albo
    print('This platform runs {} system with release {:33} on processor {}'.format(platform.system(), platform.release(), platform.processor()))
    # to 33 tutaj ladnie rezerwuje tyle miejsca na ta wartosc, przydatne przy ladnym formatowaniu/wyrownywaniu
    # albo2
    print('This platform runs {2} system with release {0} on processor {1}'.format(platform.system(), platform.release(), platform.processor()))

if __name__ == '__main__': main()